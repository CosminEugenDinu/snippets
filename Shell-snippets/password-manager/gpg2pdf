#!/usr/bin/env bash

_gpg2pdf() {
  # get password user input
  local user_pass
  local owner_pass 
  read -rsp "Password:" user_pass
  echo 
  # If these remains the same then pdf can be modified after open (evan open password can be removed).
  owner_pass="${user_pass}"

  decrypted="$(gpg --batch --yes --passphrase "${user_pass}" -d "$1")"
  # if previous command succeded
  if (( $? == 0 ));then
    # utilizing /dev/shm in-memory file storage
    mem_file="$(mktemp -p /dev/shm)"
    enscript -M A5 -o- <<< "${decrypted}" | ps2pdf - > "${mem_file}"

    read -rsp "Provide Owner Password (leaving blank allows pdf modification):" owner_pass
    echo
    qpdf --password-is-hex-key --encrypt "${user_pass}" "${owner_pass}" 256 \
      --print=none \
      --modify=none \
      --\
      "${mem_file}" "${1%.*}.pdf" \
      && echo "Created file '${1%.*}.pdf'"
  fi

  # restart agent in order to lose kept password
  gpgconf --kill gpg-agent
  unset user_pass
  unset owner_pass
}


if (( $# == 0 )); then
  echo "Use is like: ./gpg2pdf <file.gpg>"
else
  ext="${1##*.}"
  if [[ "${ext}" != "gpg" ]];then
    echo "File must be of type '*.gpg'."
    exit 2
  fi
  _gpg2pdf "$1"
fi
